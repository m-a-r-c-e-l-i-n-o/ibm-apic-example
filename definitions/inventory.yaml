paths:
  /items:
    post:
      tags:
        - item
      summary: Create a new instance of the model and persist it into the data source.
      operationId: item.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            $ref: '#/definitions/item'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/item'
      deprecated: false
    get:
      tags:
        - item
      summary: Find all instances of the model matched by filter from the data source.
      operationId: item.find
      parameters:
        - name: filter
          in: query
          description: 'Filter defining fields, where, include, order, offset, and limit'
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/item'
      deprecated: false
  '/items/{id}':
    get:
      tags:
        - item
      summary: Find a model instance by id from the data source.
      operationId: item.findById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
        - name: filter
          in: query
          description: Filter defining fields and include
          required: false
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/item'
      deprecated: false
    delete:
      tags:
        - item
      summary: Delete a model instance by id from the data source.
      operationId: item.deleteById
      parameters:
        - name: id
          in: path
          description: Model id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
      deprecated: false
    put:
      tags:
        - item
      summary: >-
        Update attributes for a model instance and persist it into the data
        source.
      operationId: item.prototype.updateAttributes
      parameters:
        - name: data
          in: body
          description: An object of model property name/value pairs
          required: false
          schema:
            $ref: '#/definitions/item'
        - name: id
          in: path
          description: PersistedModel id
          required: true
          type: string
          format: JSON
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/item'
      deprecated: false
  '/containers/{container}/download/{file}':
    get:
      tags:
        - container
      operationId: container.download
      parameters:
        - name: container
          in: path
          required: true
          type: string
        - name: file
          in: path
          required: true
          type: string
      responses:
        '204':
          description: Request was successful
      deprecated: false
      security: []
definitions:
  item:
    properties:
      description:
        description: Item description
        type: string
      id:
        description: Item ID
        type: number
        format: double
      img:
        description: Item image location
        type: string
      img_alt:
        description: Item image title
        type: string
      name:
        description: Item name
        type: string
      price:
        description: Item price
        type: number
        format: double
      rating:
        description: Item rating
        type: number
        format: double
    required:
      - description
      - id
      - img
      - img_alt
      - name
      - price
    additionalProperties: false
swagger: '2.0'
info:
  x-ibm-name: inventory
  version: 1.0.0
  title: inventory
  termsOfService: CompanyB terms of service
  license:
    name: companyB license
    url: 'http://www.companyb.com'
schemes:
  - https
host: $(catalog.host)
basePath: /api
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  clientIdHeader:
    type: apiKey
    in: header
    name: X-IBM-Client-Id
  clientSecretHeader:
    in: header
    name: X-IBM-Client-Secret
    type: apiKey
security:
  - {}
x-ibm-configuration:
  testable: true
  enforced: true
  cors:
    enabled: true
  catalogs:
    apic-dev:
      properties:
        runtime-url: $(TARGET_URL)
    sb:
      properties:
        runtime-url: 'http://localhost:4001'
        TARGET_HOST: >-
          https://apiconnect-88a8472a-7cf2-4dfb-8a57-5f024ecbd74c.marcelino-dev.apic.mybluemix.net
  assembly:
    execute:
      - invoke:
          target-url: $(TARGET_HOST)$(request.path)
          tls-profile: 'client:Loopback-client'
  properties:
    TARGET_HOST:
      value: >-
        https://apiconnect-451f7327-df09-41b7-828d-d1450f5536c3.marcelino-dev.apic.mybluemix.net
      description: ''
      encoded: false
  gateway: datapower-gateway
